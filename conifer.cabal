-- Initial conifer.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                conifer

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
synopsis:            A mathematical model of a conifer

-- A longer description of the package.
-- description:         

-- The license under which the package is released.
license:             BSD3

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Robert Grudem

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          bobgru@hotmail.com

-- A copyright notice.
-- copyright:           

-- category:            

build-type:          Simple

-- Extra files to be distributed with the package, such as examples or a 
-- README.
extra-source-files:  README.md
                   , examples/individual.hs
                   , examples/comparison.hs
                   , examples/legend.hs
                   , examples/ellipse.hs

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10


library
  -- Modules exported by the library.
  exposed-modules:     Conifer, Conifer.Types, Conics, Matrix
  
  -- Modules included in this library but not exported.
  -- other-modules:       
  
  -- LANGUAGE extensions used by modules in this package.
  other-extensions:    NoMonomorphismRestriction
  
  -- Other library packages from which modules are imported.
  build-depends:       base >=4.5
                     , aeson
                     , attoparsec
                     , bytestring
                     , containers
                     , data-default-class >=0.0
                     , diagrams-lib ==1.0
                     , diagrams-svg ==1.0
                     , mtl
                     , unordered-containers
                     , vector-space
  
  -- Directories containing source files.
  hs-source-dirs:      src
  
  -- Base language which the package is written in.
  default-language:    Haskell2010
  
Executable individual
  Build-Depends:  base, diagrams-lib, diagrams-svg, data-default-class
                , conifer, optparse-applicative
  Main-Is:        individual.hs
  hs-source-dirs:      examples
  default-language:    Haskell2010

Executable comparison
  Build-Depends:  base, diagrams-lib, diagrams-svg, data-default-class
                , conifer
  Main-Is:        comparison.hs
  hs-source-dirs:      examples
  default-language:    Haskell2010

Executable legend
  Build-Depends:  base, diagrams-lib, diagrams-svg, data-default-class,
                  optparse-applicative, safe, conifer
  Main-Is:        legend.hs
  hs-source-dirs:      examples
  default-language:    Haskell2010

Executable ellipse
  Build-Depends:  base, diagrams-lib, diagrams-svg, data-default-class, conifer
  Main-Is:        ellipse.hs
  hs-source-dirs:      examples
  default-language:    Haskell2010

Executable extract-dims
  Build-Depends:  base, text, bytestring, attoparsec, aeson, mtl
  Main-Is:        extractDims.hs
  hs-source-dirs:      examples
  default-language:    Haskell2010

Test-Suite matrix-unit-tests
  Type:           exitcode-stdio-1.0
  Main-Is:        matrixTests.hs
  Buildable:      True
  Build-Depends:  base -any, QuickCheck -any, conifer, HUnit
  hs-source-dirs: test/unit-tests
  default-language:    Haskell2010

Test-Suite parser-unit-tests
  Type:           exitcode-stdio-1.0
  Main-Is:        parserTests.hs
  Buildable:      True
  Build-Depends:  base -any, QuickCheck -any, conifer, HUnit
  hs-source-dirs: test/unit-tests
  default-language:    Haskell2010

